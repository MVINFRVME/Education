from time import time


def timer(func):
    def wrapped_func(*args, **kwargs):
        start_at = time()
        result = func(*args, **kwargs)
        end_at = time()
        run_time = end_at - start_at
        print(f'Функция работала {run_time} сек.')
        return result
    return wrapped_func


class Solution:
    @timer
    def arithmeticTriplets(self, nums, diff) -> int:
        result = 0
        for i in range(0, len(nums) - 2):
            for j in range(i + 1, len(nums) - 1):
                if nums[j] - nums[i] > 3:
                    break
                for k in range(j + 1, len(nums)):
                    if nums[k] - nums[j] > 3:
                        break
                    if (nums[k] - nums[j] == diff) and (nums[j] - nums[i] == diff):
                        result += 1

        return result






#i < j < k,
# nums[j] - nums[i] == diff
# nums[k] - nums[j] == diff
# [10,7,6,4,1,0]


nums = [0,1,4,6,7,10,14,16,18,20,21,30, 32, 35, 36, 39, 41, 43, 46, 48, 49, 52, 53, 56, 58, 60, 63, 66, 68, 70, 73, 76, 78, 80, 81, 84, 86, 89, 91, 94, 97, 100, 103, 105, 108, 110, 113, 116, 118, 120, 123, 126, 128, 130, 133, 135, 138, 141, 144, 146, 148, 151, 153, 156, 158, 160, 162, 165, 168, 170, 173, 176, 179, 181, 184, 186, 188, 191, 194, 196, 199, 201, 203, 206, 209, 212, 214, 217, 220, 222, 225, 227, 230, 233, 236, 239, 241, 244, 247, 249, 252, 255, 258, 260, 263, 266, 268, 271, 273, 276, 278, 281, 283, 286, 289, 292, 294, 297, 299, 302, 305, 307, 310, 312, 315, 318, 320, 322, 325, 327, 330, 333, 335, 338, 341, 344, 346, 349, 352, 355, 358, 360, 363, 365, 368, 370, 373, 376, 378, 381, 384, 387, 389, 392, 395, 398, 400, 403, 406, 409, 411, 414, 417, 420, 423, 426, 428, 431, 433, 436, 438, 441, 444, 446, 449, 452, 454, 457, 460, 462, 465, 468, 470, 472, 475, 478, 480, 483, 486, 489, 491, 494, 497, 499, 502, 505, 508, 511, 514, 516, 519, 522, 525, 528, 531, 534, 536, 539, 542, 545, 547, 550, 553, 556, 558, 561, 564, 566, 569, 572, 574, 577, 579, 582, 585, 588, 591, 594, 596, 599, 602, 604, 607, 610, 613, 615, 618, 621, 624, 627, 630, 633, 636, 638, 641, 644, 647, 650, 652, 655, 658, 661, 664, 666, 669, 672, 675, 678, 680, 683, 686, 689, 692, 694, 697, 700, 702, 705, 708, 711, 714, 717, 720, 723, 726, 729, 732, 735, 738, 740, 743, 746, 748, 751, 754, 757, 760, 763, 765, 768, 771, 774, 777, 780, 783, 786, 789, 792, 794, 797, 800, 803, 805, 808, 811, 814, 817, 820, 822, 825, 828, 831, 834, 837, 839, 842, 845, 848, 851, 854, 857, 860, 863, 865, 868, 871, 874, 877, 880, 883, 885, 888, 891, 894, 896, 899, 902, 905, 908, 911, 914, 917, 920, 923, 926, 929, 932, 935, 938, 941, 944, 947, 950, 952, 955, 958, 961, 964, 967, 970, 973, 976, 979, 982, 985, 988, 990, 993, 996, 999, 1000]
diff = 3
ex = Solution()
print(ex.arithmeticTriplets(nums, diff))
assert ex.arithmeticTriplets([0,1,4,6,7,10], 3) == 2
assert ex.arithmeticTriplets([4,5,6,7,8,9], 2) == 2
